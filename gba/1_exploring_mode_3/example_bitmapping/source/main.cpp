#include <cstdint>
#include <vector>
#include "gba.h"
#include "video_operations.h"

auto data = std::vector<std::uint16_t>{
    0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x1F, 0x1F, 0x00,
    0x1F, 0x00, 0x00, 0x1F, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x1F, 0x00, 0x1F, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x1F,
    0x1F, 0x1F, 0x1F, 0x1F, 0x00, 0x1F, 0x1F, 0x1F, 0x1F, 0x00, 0x1F, 0x00, 0x1F, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x1F,
    0x1F, 0x00, 0x00, 0x1F, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x1F, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x1F,
    0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x1F, 0x1D, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F
};

void draw_data(std::uint8_t x, std::uint8_t y) {
    auto data_width = data.size()/7;
    for (auto i = 0u; i < data.size(); ++i) {
        if (data[i] == 0) continue;
        gba::video::vram(
                x + i % data_width,
                x + i / data_width,
                data[i]);
    }
}

int main() {
    {
        using namespace gba::video;
        lcd_control() = 3;
        enable_bg(2);
    }
    while (true) {
        gba::video::fill_screen(0x2000);
        gba::video::vsync();
        draw_data(10u, 10u);
    }
}
