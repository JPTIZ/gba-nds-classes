<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <meta content="text/html; charset=ISO-8859-1" http-equiv="content-type">
  <meta name="generator" content="Context">
  <meta name="Author" content="Cearn">
  <meta name="Created" content="20031101">
  <meta name="Modified" content="20130324">

  <title>Tonc: References</title>
  <link rel="stylesheet" type="text/css" href="tonc.css">
  <script type="text/javascript" src="tonc.js"></script>
</head>
<body onload="main();">

<!--567890123456789012345678901234567890123456789012345678901234567-->

<!-- [[header]] -->
<table class="header">
<tr>
  <td class="hdr_l"><a href="edmake.htm">Invoking make</a></td>
  <td class="hdr_c"><a href="toc.htm">Contents</a></td>
  <td class="hdr_r"><a href="log.htm">Log</a></td>
</tr>
</table>
<!-- [[/header]] -->
<hr>

<h1 id="ch-">F.
  References and links</h1>

<!-- [[toc]] -->
<ul>
  <li><a href="#sec-gen">General sites</a>
  <li><a href="#sec-doc">Documents</a>
  <li><a href="#sec-tools">Tools</a>
  <li><a href="#sec-books">Books</a>
</ul>
<!-- [[/toc]] -->


<!-- ============================================================== -->

<h2 id="sec-gen">F.1.
  General sites</h2>

<h3 id="ssec-essential">F.1.1.
  Essentials</h3>
<ul>
<li><a href="http://www.devkitpro.org/" target="_blank">www.devkitpro.org</a>. 
  Home of <b>devkitARM</b>, the toolchain of choice for GBA 
  development. And NDS and more. Updated regularly and you can find 
  a <b>libgba</b> and sample code here too.
<li><a href="http://www.gbadev.org" target="_blank">www.gbadev.org</a>. 
  GBA development hub. Tools, documents, tutorials can all be found 
  here. A visit to the <a href="http://forum.gbadev.org" target="_blank">forum</a> is 
  highly recommended if you're just starting, whether you have problems 
  or not. If you do have a problem, chances are you're not the first and
  that it has been solved before here. Just remember the 
  <a href="http://www.albinoblacksheep.com/flash/posting.php" target="_blank">rules of 
  posting</a> before you start a topic.
<li><a href="http://nocash.emubase.de/" target="_blank">No$gba</a>.
  Martin Korth's site. You can find the immensely complete (though
  Spartan) <a href="http://nocash.emubase.de/gbatek.htm" target="_blank">GBATek</a>
  reference document and the most accurate emulator
  <a href="http://nocash.emubase.de/gba.htm" target="_blank">here</a>, both of which 
  are insanely great. Though the freeware version doesn't have any 
  debug screens, the $15 homebrew version does.
<li><a href="http://vba.ngemu.com" target="_blank">vba.ngemu.com</a>, 
  The <b>VisualBoy Advance</b> emulator. Not as accurate as 
  no$gba when it comes to timings, but still very, very good, and 
  has a more friendly interface and all kinds of cool viewers for 
  tiles, maps, IO registers and the like.
</ul>

<h3 id="ssec-altdev">F.1.2.
  Alternative dev environments</h3>
<ul>
<li><a href="http://www.ngine.de" target="_blank">www.ngine.de</a>, 
  Host of <b>HAM</b>. HAM is a full C developer environment for the
  GBA, complete with IDE, palette and map editor and, of course, 
  compiler. There is also an extension library called 
  <a href="http://www.console-dev.de" target="_blank">HEL</a> with extra (and 
  optimized) code. Taking a look at that would be a good idea.
<li><b>DragonBasic</b>.
  If you don't like all the intricacies of C/asm, you might try 
  this BASIC-like environment. The project is a little, uhm, asleep 
  right now, though.
<li><a href="http://www.nocturnal-central.com/" target="_blank">Catapult</a>.
  Don't know too much about Catapult, but from what I've seen, it seems
  to work a little bit like Gamemaker: you create images/sound and 
  scripts that Catapult ties together into a ROM image. Catapult comes 
  complete with graphic, map and sound editors, tutorials, samples, 
  emulator and probably more.
</ul>

<h3 id="ssec-personal">F.1.3.
  Personal sites</h3>
<p>
A few sites of (high-ranked) forum-dwellers. These guys have 
been around for a while and you can learn a lot from playing their 
demos and browsing through their source code.
</p>
<ul>
<li><a href="http://darkfader.net/main/" target="_blank">darkfader.net</a>. 
  Darkfader's site, with information, tools, demos, code not only 
  for GBA development, but many other systems as well. 
<li><a href="http://deku.gbadev.org/" target="_blank">deku.gbadev.org</a>. 
  DekuTree64's site has more than just the sound mixer; there's also
  some demos (with source) and tools like <b>quither</b>, a 
  quantizer / ditherer for 16 color tiles.
<li>
  Headspin had put together
  <a href="http://members.iinet.net.au/~freeaxs/gbacomp/" target="_blank">this 
  overview</a> of various items, incluning the different compression 
  routines and music players available.
<li>
  <a href="http://www.thingker.com/gba/" target="_blank">www.thingker.com</a>. Scott 
  Lininger's site with a number of demos, including <b>multiplayer</b> 
  code, which seems very hard to come by.
<li>
  <a href="http://www.console-dev.de" target="_blank">www.console-dev.de</a>. Peter 
  Schaut's site, with VisualHam, the HAMlib IDE; HEL, the HAM addon
  library; katie, a data-management tool and more.
<li><a href="http://www.pineight.com/" target="_blank">www.pineight.com</a>. Site 
  of gbadev faq maintainer, tepples. There are a number of
  interesting things here. Special mentions for <b>Tetanus on
  Drugs</b>, a zonked-out version of tetris (can't call it a clone 
  as it is so much more), and <b>GBFS</b>, a file system for the GBA.
</ul>


<!-- ============================================================== -->

<h2 id="sec-doc">F.2.
  Documents</h2>

<h3 id="ssec-tut">F.2.1.
  Tutorials</h3>
<ul>
<li><a href="http://www.belogic.com" target="_blank">www.belogic.com</a>. Pretty much 
  <i>the</i> site on GBA sound programming. Has info on all the 
  registers, and a set of <i>very</i> complete demos.
<li>If you're looking for <b>C/C++ tutorials</b>, there seems to 
  be some good stuff 
  <a href="http://www.cprogramming.com/tutorial.html" target="_blank">here</a>
<li>DekuTree's 
  <a href="http://deku.gbadev.org/program/sound1.html" target="_blank">sound mixing
  tutorial</a>. Whereas Belogic shows the basics of sound programming, 
  this sight guides you through the steps of making a sound/music mixer.
<li><a href="http://www.drunkencoders.com" target="_blank">www.drunkencoders.com</a>. 
  This is the new home of <b>the PERN project</b>, the original 
  series of tutorials for gba development. PERN was set for a 
  complete renewal, but that seems to have been deprioritised 
  in favor of the DS, which you will also find a lot about there.
<li>jake2431 has been gathering <b>NDS / C / GBA tutorial links</b> on
  the gbadev 
  <a href="http://forum.gbadev.org/viewtopic.php?t=8353" target="_blank">forum:8353</a>
</ul>

<h3 id="ssec-ref">F.2.2.
  Reference documents</h3>
<ul>
<li>
  The <a href="http://c-faq.com/" target="_blank"><b>comp.lang.c FAQ</b></a>. 
  Pretty long, but very useful if you're learning C as well as GBA 
  programming.
<li>
  A document on <a href="http://www.jetcafe.org/~jim/c-style.html" target="_blank"><b>C 
  coding standards</b></a>, one of many floating around. If you've 
  based your code on any of the non-tonc tutorials out there 
  you <b><i>need</i></b> to read this. The standard doesn't have to 
  be followed religiously, but adopting most of them would be a good 
  idea and would solve a lot of the bad habits the other sites teach.
<li>
  Mr Lee has a few things to say about 
  <a href="http://leto.net/docs/C-optimization.php" target="_blank">optimization</a>. 
  These are simple optimization that cost nothing or little in 
  readability.
</li>
<li>
  The <a href="http://forum.gbadev.org/viewtopic.php?t=418" target="_blank"><b>gbadev
  forum FAQ</b></a>. Essential reading, whether you're new or not. 
  Bookmark it, make a local copy, print it out; I don't care, but 
  get FAQed.
<li>
  The <a href="http://nocash.emubase.de/gbatek.htm" target="_blank"><b>GBATek</b></a>.
  reference document. This is basically the GBA-coders' bible (only 
  this one <i>is</i> a worthwhile read). The information density is 
  very high and maybe a little perplexing if you're just starting, 
  but when you get the hang of it, it's pretty much all you'll 
  require. Is also part of HAMLib's documentation.
<li>
  The <a href="http://www.cs.rit.edu/~tjh8300/CowBite/CowBiteSpec.htm" target="_blank">
  CowBite Spec</a>, a another reference document. At least partially
  based on GBATek. Not as rich, but probably more understandable.
<li>
  <a href="http://www.gnu.org/manual/manual.html#Development" target="_blank">www.gnu.org</a>.
  <b>GCC documentation</b> in various formats. CHM versions (with 
  search functions) can be found
  <a href="http://htmlhelp.berlios.de/books/chm.php" target="_blank">here</a>. 
  These sites have manuals on the GCC toolchains and other things. 
  Get the files for the assembler (<b>AS</b>), compiler (<b>GCC</b>), 
  linker (<b>LD</b>) and preferably the maketool (<b>make</b>) as 
  well. The preprocessor manual (<b>cpp</b>) may be useful as well.
</ul>

<h3 id="ssec-arm">F.2.3.
  ARM docs</h3>
<p>
Naturally, the ARM site itself also has useful documents. Note that 
most of these are pdfs.
</p>
<ul>
<li><a href="http://www.arm.com/miscPDFs/8031.pdf" target="_blank">miscPDF 8031</a>.
  The <b>Arm Architecture Procedure Call Standard</b> (AAPCS). 
  Explains how parameters are passed between functions. Required
  reading if you want to do assembly.
<li><a href="http://www.arm.com/pdfs/DAI0034A_efficient_c.pdf" target="_blank">PDF DAI0034A</a>. 
  <b>Writing efficient C for ARM</b>. Although it's written with ARM's 
  own compiler in mind, some tips will work for other toolchains as 
  well.
<li><a href="http://www.arm.com/pdfs/DDI0210B_7TDMI_R4.pdf" target="_blank">PDF DDI0210B</a> 
  The big one: the complete <b>technical reference manual</b> for the 
  ARM7TDMI.
<li><b>Instruction set reference sheets</b>. 
  <a href="http://www.arm.com/pdfs/QRC0001H_rvct_v2.1_arm.pdf" target="_blank">ARM</a> 
  and 
  <a href="http://www.arm.com/pdfs/QRC0001H_rvct_v2.1_thumb.pdf" target="_blank">THUMB</a> 
  versions.
<li>Support faqs on <b>alignment issues</b>: 
  <a href="http://www.arm.com/support/faqdev/1228.html" target="_blank">faqdev 1228</a>, 
  <a href="http://www.arm.com/support/faqdev/1469.html" target="_blank">faqdev 1469</a>, 
  and 
  <a href="http://www.arm.com/support/faqip/3661.html" target="_blank">faqip 3661</a>.
</ul><br>


<!-- ============================================================== -->

<h2 id="sec-tools">F.3.
  Tools</h2>

<h3 id="ssec-tools-text">F.3.1.
  Source code tools</h3>
<p>
If you're still using Notepad to write your GBA code, don't. Do 
yourself a favor and just &hellip; don't, OK? Though I personally use
Visual C for writing code, there are some other very nice tools for 
the job, both in terms of general text editors as IDEs.
</p>
<ul>
<li>
  <b><a href="http://www.fixedsys.com/context" target="_blank">ConTEXT</a></b>.
  A while back there was a thread where someone asked for a
  replacement editor for Notepad since, and I quote, &ldquo;Notepad
  SUCKS!&rdquo;. The name ConTEXT popped up a couple of times, and
  I find it very nice indeed, and not just for coding purposes.
  It allows for custom highlighters, integrated shell commands 
  (to run makefiles for example) and attachable help files
<li>
  <a href="http://www.pnotepad.org/" target="_blank"><b>Programmer's Notepad</b></a> 
  (PN). Good and versatile text editor. Comes with the devkitPRO 
  installation.
<li><b><a href="http://www.eclipse.org" target="_blank">Eclipse IDE</a></b>. While
  I haven't had time to work with it firsthand, a good number of
  gbadev forum-dwellers swear by it. You can read how to set it up for 
  GBA development in 
  <a href="http://forum.gbadev.org/viewtopic.php?t=5271" target="_blank">forum:5271</a>.
<li><b><a href="http://www.bloodshed.net/" target="_blank">Dev-C++</a></b>.
  Dev-C++ is another IDE that comes up often and maybe worth a look. 
  <a href="http://forum.gbadev.org/viewtopic.php?t=1736" target="_blank">forum:1736</a>
  has info on how to set it up, but it's an old thread so you may have 
  to do a little extra work.
</ul>

<h3 id="ssec-tools-gfx">F.3.2.
  Graphics tools</h3>
<p>
Just as Notepad sucks for coding (and anything apart from the
simplest text editing), MS-Paint is hell on Earth when it comes to 
the kind of graphics you need in GBA games. What you need is a tool 
that allows full control over the bitmap's palette, and MS-Paint 
fails spectacularly in that respect. So, I might add, does Visual C's 
native bitmap editor. And even big and bulky photo-editing tools 
like PhotoShop and Paint Shop Pro have difficulty here, or so I'm 
told. So here are some tools that do allow the kind of control
that you need. Whatever tool you plan on using: <b>make sure it doesn't 
screw up the palette</b>! Some editors are known to throw entries 
around.
</p>
<ul>
<li><b><a href="http://www.ohnehirn.de/tools/" target="_blank">gfx2gba</a></b>. 
  Command-line converter of graphics with interesting features such as 
  tile-stripping, palette merging and supports all bitdepths and 
  BIOS compression routines. Note that there are two converters named 
  gfx2gba; you'll want the one my Markus. The HAM distribution includes 
  this tool.
<li><b><a href="http://www.gimp.com" target="_blank">The GIMP</a></b>.
  Very complete GNU-based bitmap/photo editor.
<li><b><a href="http://www.tempest-j.com/gale/e/" target="_blank">Graphics Gale</a></b>
  is a very complete graphics editor. It has all the tools you 
  would expect a bitmap editor to have, a proper palette editor 
  and an animation tool.
<li><b><a href="http://www.coranac.com/projects/#usenti" target="_blank">Usenti</a></b>. This is my
  own bitmap editor. It may not be as advanced as Graphics Gale,
  but that does make the interface a lot easier. Aside from that
  it has some very interesting palette tweaking options like a
  palette swapper and sorter, and can export to GBA formats in 
  binary, ASM and C code.
</ul>

<h3 id="ssec-tools-map">F.3.3.
  Map Editors</h3>
<p>
While the maps that I've used in Tonc were created on the fly, for 
any serious work you need a map editor. Here are a few.
</p>

<ul>
  <li><b><a href="http://nessie.gbadev.org" target="_blank">MapEd</a></b>, by
    Nessie. Allows multiple layers, collision tiles and custom
	exporters. Yum.
  <li><b><a href="http://www.tilemap.co.uk/mappy.php" target="_blank">Mappy</a></b>. 
    This is a general purpose map editor which can be used for a lot 
	of different types of maps
  <li><b><a href="http://www.coranac.com/projects/#mirach" target="_blank">Mirach</a></b>. This is
    my own map editor, but lack of time means that I haven't been 
    able to get all the tools that I wanted in yet <code>:(</code>.
</ul>

<h3 id="ssec-tools-misc">F.3.4.
  Misc tools</h3>
<ul>
<li><b><a href="http://www.coranac.com/projects/#excellut" target="_blank">excellut</a></b>. One
  thing you do not want in GBA programming is to call mathematical 
  functions. You want <a href="luts.htm">look-up tables</a> to get 
  the proper values.  Excellut sets up MS Excel to enable you to
  create any kind of LUT you can think of within seconds (well, OK, 
  minutes). If you haven't created a LUT builder of your own (and 
  maybe even if you have)it's definitely worth a look.
</ul>


<!-- ============================================================== -->

<h2 id="sec-books">F.4.
  Books</h2>
<ul>
<li>Douglas Adams, &ldquo;<i>The Hitchhiker's Guide to the 
  Galaxy</i>&rdquo;. OK, so this isn't exactly a reference, but 
  recommended nonetheless. If only to know the significance of 
  the number 42 and the origin of the Babel Fish.
<li>Edward Angel, &ldquo;<i>Interactive Computer Graphics with Open 
  GL</i>&rdquo;. Though this is a book on 3D, Lots of the linear
  algebra can be applied to 2D as well. Relevant chapters are 4 
  (matrix transformations) and 5 (perspective (Mode 7 anyone?)). 
  Make sure you have the 3<sup>rd</sup> edition, there are too 
  many embarassing errors in the second.
<li>George B. Arfken &amp; Hans J. Weber, &ldquo;<i>Mathematical Methods 
  for Physicists</i>&rdquo; If physics were an RPG, this would be 
  the Monster's Manual. Chapters 1-3 deal with vectors and matrices
  in great detail.
<li>Andr&eacute; LaMothe, &ldquo;<i>Black Art of 3D Game 
  Programming</i>&rdquo;. For the DOS-era, so may be hard to find. 
  Deals with 3D programming under heavy hardware constraints (just 
  like the GBA). Very nice.
<li>Andr&eacute; LaMothe &ldquo;<i>Tricks of the Windows Game 
  Programming Gurus</i>&rdquo;. Another 1000+ page tome by Mr LaMothe; 
  one of many), an excellent guide to game programming in general, 
  and to DirectX in particular.
<li>David C. Lay, &ldquo;<i>Linear Algebra and its 
  Applications</i>&rdquo;. Nearly everything on my 
  <a href="matrix.htm">matrix</a> page comes out of this book.
<li>O'Reilly pocket references for &ldquo;<i>CSS</i>&rdquo; and 
  &ldquo;<i>HTML</i>&rdquo; by Eric Meyer and Jennifer Niederst, 
  respectively. Absolute lifesavers for something like this site.
<li>Steve Oualline, &ldquo;<i>How Not to Program in C++</i>&rdquo;. 
  The cover features a computer sticking its tongue out at you; 
  the first sentence of the introduction is &ldquo;Pain is a 
  wonderful learning tool&rdquo;. You just know this is gonna be 
  good. This book gives you 111 broken code problems to solve, 
  ranging from obvious to crafted by the Dark Lord himself. If you 
  can't recognize yourself in at least half of these problems, you 
  haven't been coding in C for very long. 
</ul>

<br>

<div class="endtag">
Modified <span class="time">Mar 13, 2008</span>,
<a href="mailto:cearn@coranac.com">J Vijn</a>.
Get all Tonc files <a href="http://www.coranac.com/projects/#tonc" target="_blank">here</a>
</div>

<hr>


<!-- [[footer]] -->
<table class="footer">
<tr>
  <td class="hdr_l"><a href="edmake.htm">Prev</a></td>
  <td class="hdr_c"><a href="toc.htm">Contents</a></td>
  <td class="hdr_r"><a href="log.htm">Next</a></td>
</tr>
<tr>
  <td class="hdr_l">Invoking make</td>
  <td class="hdr_c"></td>
  <td class="hdr_r">Log</td>
</tr>
</table>
<!-- [[/footer]] -->

</body>
</html>


